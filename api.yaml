swagger: "2.0"
info:
  description: "APT para pedidos de comida deliciosa. Como cliente, podras registrarte, ver el listado de nuestros productos y realizar una orden. Los administradores del restaurante tienen la posibilidad de recibir pedidos y actualizarlos"
  version: "1.0.0"
  title: "Delilah Resto"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "danieljpr96@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:3000"
basePath: "/v1"
tags:
- name: "producto"
  description: "Endpoints para realizar operaciones de de productos"
- name: "usuarios"
  description: "Endpoints para realizar operaciones de de usuarios"
- name: "pedido"
  description: "Endpoints para realizar operaciones de de pedidos"
  externalDocs:
    description: "Find out more about our store"
    url: "http://swagger.io"
schemes:
- "https"
- "http"
paths:
  /productos:
    post:
      tags:
      - "producto"
      summary: "Agregar un nuevo producto a la lista"
      description: "Los usuarios con rol de administrador podra agregar nuevos productos a la lista"
      operationId: "addProducto"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Objeto producto que se quiere agregar"
        required: true
        schema:
          $ref: "#/definitions/Producto"
      security:
        - ApiKeyAuth: []
      responses:
        "400":
          description: "Contenido no puede estar vacio"
        "500":
          description: "Ocurrio algun error al crear el producto"
        "200":
          description: "Operacion exitosa"
          schema:
            $ref: "#/definitions/Producto"
    get:
      tags:
      - "producto"
      summary: "Obtener todos los productos"
      description: "Todos los usuarios podran obtener los producto disponibles"
      operationId: "getProductos"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        "500":
          description: "Ocurrio un error al obtener los productos"
        "200":
          description: "Operacion exitosa"
          schema:
            $ref: "#/definitions/Producto"
  /productos/{productoId}:
    put:
      tags:
      - "producto"
      summary: "Actualizar productos"
      description: "Los usuarios administradores podran actualizar los productos por su Id"
      operationId: "actualizarProducto"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "productoId"
        in: "path"
        description: "Id del producto que se quiere actualizar"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Objeto producto actualizado"
        required: true
        schema:
          $ref: "#/definitions/Producto"
      security:
        - ApiKeyAuth: []
      responses:
        "500":
          description: "Error actualizando el producto con el id ingresado"
        "404":
          description: "Producto no encontrado"
        "200":
          description: "Operacion exitosa"
    delete:
      tags:
      - "producto"
      summary: "Borrar un productos"
      description: "Los usuarios administradores podran borrar los productos por su Id"
      operationId: "deleteProducto"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "JWT"
        in: "header"
        required: true
        type: "string"
      - name: "productoId"
        in: "path"
        description: "Id del producto a borrar"
        required: true
        type: "integer"
        format: "int64"
      security:
        - ApiKeyAuth: []
      responses:
        "500":
          description: "No se pudo borrar el producto"
        "404":
          description: "Producto no encontrado"
        "200":
          description: "Operacion exitosa"
  /usuarios:
    post:
      tags:
      - "usuarios"
      summary: "Agregar un nuevo usuario a la lista"
      description: "Cualquier usuario se podra registar en la aplicacion"
      operationId: "addUsuario"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Objeto usuario que se quiere agregar"
        required: true
        schema:
          $ref: "#/definitions/Usuario"
      responses:
        "400":
          description: "Contenido no puede estar vacio"
        "500":
          description: "Ocurrio algun error al crear el usuario"
        "200":
          description: "Operacion exitosa"
          schema:
            $ref: "#/definitions/Usuario"
  /usuarios/{usuarioId}:
    get:
      tags:
      - "usuarios"
      summary: "Obtener usuarios por el id"
      description: "Los usuarios administradores podran obtener todos los usuarios por su id/ Los usuarios logueados solo pueden obtener su informacion personal"
      operationId: "obtenerUsuario"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "usuarioId"
        in: "path"
        description: "Id del usuario que se quiere obtener"
        required: true
        type: "integer"
        format: "int64"
      security:
        - ApiKeyAuth: []
      responses:
        "500":
          description: "No se pudo encontrar el usuario"
        "404":
          description: "Usuario no encontrado"
        "200":
          description: "Operacion exitosa"
          schema:
            $ref: "#/definitions/Usuario"
  /usuarios/login:
    post:
      tags:
      - "usuarios"
      summary: "Usuarios registrados pueden iniciar sesion"
      description: "Cualquier usuario podra podra iniciar secion por medio de la obtencion de una JWT"
      operationId: "loggingUsuario"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "query"
        description: "The user name for login"
        required: true
        type: "string"
      - name: "password"
        in: "query"
        description: "The password for login in clear text"
        required: true
        type: "string"
      responses:
        "401":
          description: "Usuario o clave incorrectos"
        "200":
          description: "Operacion exitosa"
          schema:
            $ref: "#/definitions/UsuarioLogin"
  /pedidos:
    post:
      tags:
      - "pedido"
      summary: "Agregar un nuevo pedido"
      description: "Los usuarios podran agregar nuevos productos a la lista"
      operationId: "addPedido"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Objeto pedido que se quiere agregar"
        required: true
        schema:
          $ref: "#/definitions/Pedido"
      responses:
        "400":
          description: "Contenido no puede estar vacio"
        "500":
          description: "Ocurrio algun error al crear el pedido"
        "200":
          description: "Operacion exitosa"
          schema:
            $ref: "#/definitions/Pedido"
    get:
      tags:
      - "pedido"
      summary: "Obtener todos los pedidos"
      description: "Los usuarios administradores podran obtener todos los pedidos"
      operationId: "getPedidos"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      security:
        - ApiKeyAuth: []
      responses:
        "500":
          description: "Ocurrio un error al obtener los pedidos"
        "200":
          description: "Operacion exitosa"
          schema:
            $ref: "#/definitions/Pedido"
  /pedidos/{pedidoId}:
    get:
      tags:
      - "pedido"
      summary: "Obtener pedidos por el id"
      description: "Los usuarios administradores podran obtener todos los pedidos por su id/ Los usuarios logueados solo pueden obtener su informacion personal"
      operationId: "obtenerPedido"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "pedidoId"
        in: "path"
        description: "Id del pedido que se quiere obtener"
        required: true
        type: "integer"
        format: "int64"
      security:
        - ApiKeyAuth: []
      responses:
        "500":
          description: "Ocurrio un error buscando los usuarios"
        "200":
          description: "Operacion exitosa"
          schema:
            $ref: "#/definitions/Pedido"
    put:
      tags:
      - "pedido"
      summary: "Actualizar pedidos"
      description: "Los usuarios administradores podran actualizar los pedidos por su Id"
      operationId: "actualizarPedido"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "pedidoId"
        in: "path"
        description: "Id del pedido que se quiere actualizar"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Objeto pedido actualizado"
        required: true
        schema:
          $ref: "#/definitions/Pedido"
      security:
        - ApiKeyAuth: []
      responses:
        "500":
          description: "Error al actualizar pedido con el id ingrsado"
        "404":
          description: "Pedido con id ingrasado no se ha encontrado"
        "200":
          description: "Operacion exitosa"
    delete:
      tags:
      - "pedido"
      summary: "Borrar un pedido"
      description: "Los usuarios administradores podran borrar los pedidos por su Id"
      operationId: "deletePedido"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "pedidoId"
        in: "path"
        description: "Id del pedido a borrar"
        required: true
        type: "integer"
        format: "int64"
      security:
        - ApiKeyAuth: []
      responses:
        "500":
          description: "Error al actualizar pedido con el id ingrsado"
        "404":
          description: "Pedido con id ingrasado no se ha encontrado"
        "200":
          description: "Operacion exitosa"
securityDefinitions:
  ApiKeyAuth:
    type: "apiKey"
    in: "header"
    name: "JWT"
definitions:
  Producto:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      nombre:
        type: "string"
      precio:
        type: "integer"
        format: "int64"
    xml:
      name: "Producto"
  Usuario:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      user_name:
        type: "string"
      nombre_completo:
        type: "string"
      email:
        type: "string"
      telefono:
        type: "integer"
        format: "int64"     
      direccion:
        type: "string"
      password:
        type: "string"
      administrador:
        type: "integer"
        format: "int64"
    xml:
      name: "Usuario"
  UsuarioLogin:
    type: "object"
    properties:
      user_name:
        type: "string"
      token:
        type: "integer"
        example: "000000000.00000000.00000000"
        format: "int100"  
  Pedido:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      id_prductos:
        type: "integer"
        format: "int64"
      id_usuarios:
        type: "integer"
        format: "int64"
      estado:
        type: "string"
      hora:
        type: "integer"
        format: "int64"     
    xml:
      name: "Pedido"